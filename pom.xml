<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.sanjay</groupId>
    <artifactId>camel-gke</artifactId>
    <!--<version>1.0</version>-->
    <version>4b050f6</version>

    <name>Fabric8 :: Quickstarts :: Spring-Boot :: Camel XML</name>
    <description>Spring Boot example running a Camel route defined in XML</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- maven plugin versions -->
        <fabric8.maven.plugin.version>3.2.14</fabric8.maven.plugin.version>

        <!-- configure the versions you want to use here -->
        <fabric8.version>2.2.192</fabric8.version>
        <spring-boot.version>1.4.3.RELEASE</spring-boot.version>

        <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <version.number>${git.commit.id.abbrev}</version.number>
        <nexus.server>nexus-service.nexus</nexus.server>
    </properties>

   
    
    <repositories>
        <repository>
            <id>nexus</id>
            <!--<url>http://nexus:8081/nexus/content/groups/maven_group/</url>-->
            <url>http://${nexus.server}/repository/maven-public/</url>
        </repository>
    </repositories>


    <pluginRepositories>
        <pluginRepository>
            <id>nexus</id>
            <url>http://${nexus.server}/repository/maven-public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <scm>
        <connection>scm:git:https://github.com/sanjbh/camel-gke</connection>
        <url>https://github.com/sanjbh/camel-gke</url>
        <developerConnection>scm:git:https://github.com/sanjbh/camel-gke</developerConnection>
        <tag>HEAD</tag>
    </scm>

    
    <!--

    <repositories>
        <repository>
            <id>my-repo-bucket</id>
            <url>gs://mavenrepo_bucket</url>
        </repository>
    </repositories>
    

    <repositories>
    <repository>
        <id>my-repo-bucket-snapshot</id>
        <url>gs://mavenrepo_bucket/snapshot</url>
    </repository>
    <repository>
        <id>my-repo-bucket-release</id>
        <url>gs://mavenrepo_bucket/release</url>
    </repository>
</repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>my-repo-bucket</id>
            <url>gs://mavenrepo_bucket</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
-->


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project-bom-camel-spring-boot</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-arquillian</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <finalName>${project.artifactId}-${git.commit.id.abbrev}</finalName>
        <extensions>
            <extension>
                <groupId>com.gkatzioura.maven.cloud</groupId>
                <artifactId>google-storage-wagon</artifactId>
                <version>1.0</version>
            </extension>
        </extensions>
        <plugins>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <excludes>
                        <exclude>**/*KT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>asia.gcr.io/white-berm-210209/%a:%v</name>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>resource</goal>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
           <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
                <verbose>true</verbose>
                <images>
                    <image>
                        <name>asia.gcr.io/white-berm-210209/camel-gke:${git.commit.id.abbrev}</name>

                        <build>

                            <from>vixns/java8</from>

                            <entryPoint>
                                <exec>
                                    <arg>java</arg>
                                    <arg>-Djava.security.egd=file:/dev/./urandom</arg>
                                    <arg>-jar</arg>
                                    <arg>/target/${project.artifactId}.${project.packaging}</arg>
                                </exec>
                            </entryPoint>

                            <assembly>
                                <descriptorRef>artifact</descriptorRef>
                            </assembly>
                        </build>
                    </image>
                </images>
            </configuration>
        </plugin>            
            -->
        <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.4.11</version>
            <configuration>
                <imageName>asia.gcr.io/white-berm-210209/${project.artifactId}:${project.version}</imageName>
                <!--<imageName>${project.artifactId}:${project.version}</imageName>-->
                <dockerDirectory>src/main/docker</dockerDirectory>
                <buildArgs>
                    <finalName>${project.build.finalName}.jar</finalName>
                </buildArgs>
                <resources>
                    <resource>
                        <targetPath>/</targetPath>
                        <directory>${project.build.directory}</directory>
                        <include>${project.build.finalName}.jar</include>
                    </resource>
                </resources>
            </configuration>
        </plugin>
        <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <version>2.2.4</version>
            <executions>
                <execution>
                    <id>get-the-git-infos</id>
                    <phase>initialize</phase>
                    <goals>
                        <goal>revision</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <dateFormat>yyyyMMdd-HHmmss</dateFormat>
                <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                <generateGitPropertiesFile>false</generateGitPropertiesFile>
                <injectallreactorprojects>true</injectallreactorprojects>
                <!--
                <prefix>git</prefix>
                <verbose>false</verbose>
                <generateGitPropertiesFile>false</generateGitPropertiesFile>
                <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                <format>json</format>
                <gitDescribe>
                    <skip>false</skip>
                    <always>false</always>
                    <dirty>-dirty</dirty>
                </gitDescribe>
                -->
            </configuration>
        </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <version>2.2</version>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.10.0</version>
            <configuration>
              <connectionType>connection</connectionType>
              <username>sanjbh</username>
              <password>asspbhat1</password>
            </configuration>
      </plugin>
    </plugins>

</build>
</project>
